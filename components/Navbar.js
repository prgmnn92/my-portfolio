import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import classNames from "classnames";

import styles from "../styles/Navbar.module.css";

import cn from "classnames";

const NavLink = ({ children, ...props }) => {
  const router = useRouter();
  const isActive = router.asPath === props.href;

  return (
    <Link
      className={classNames({
        "font-semibold !text-brick-red": isActive,
        "px-2 py-1 hover:text-brick-red rounded transition-all text-neutral-400 text-lg": true,
      })}
      {...props}
    >
      {children}
    </Link>
  );
};

const Burger = () => (
  <svg
    width="42"
    height="19"
    viewBox="0 0 42 19"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <rect
      y="11"
      width="3"
      height="42"
      rx="1.5"
      transform="rotate(-90 0 11)"
      fill="currentColor"
    />
    <rect
      x="6"
      y="3"
      width="3"
      height="30"
      rx="1.5"
      transform="rotate(-90 6 3)"
      fill="currentColor"
    />
    <rect
      x="4"
      y="19"
      width="3"
      height="34"
      rx="1.5"
      transform="rotate(-90 4 19)"
      fill="currentColor"
    />
  </svg>
);

const Cross = () => (
  <svg
    width="32"
    height="33"
    viewBox="0 0 32 33"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <rect
      x="29.7886"
      y="0.590088"
      width="3"
      height="42"
      rx="1.5"
      transform="rotate(45 29.7886 0.590088)"
      fill="currentColor"
    />
    <rect
      x="0.0900879"
      y="2.71143"
      width="3"
      height="42"
      rx="1.5"
      transform="rotate(-45 0.0900879 2.71143)"
      fill="currentColor"
    />
  </svg>
);

const Navbar = () => {
  // const [mounted, setMounted] = useState(false);
  // const { resolvedTheme, setTheme } = useTheme();

  // // After mounting, we have access to the theme
  // useEffect(() => setMounted(true), []);

  const [mobileOpen, setMobileOpen] = useState(false);

  return (
    <div
      className={cn(
        "md:sticky md:top-0 md:w-auto w-screen fixed  z-10 md:left-0 transition-all",
        { "left-[-100%]": !mobileOpen, "left-0": mobileOpen }
      )}
    >
      <div
        onClick={() => setMobileOpen(!mobileOpen)}
        className={cn("md:hidden fixed top-6 right-6 z-20  p-2", {
          "text-white": mobileOpen,
          "text-[#1e1e1e]": !mobileOpen,
        })}
      >
        {mobileOpen ? <Cross /> : <Burger />}
      </div>
      <nav className="bg-[#1e1e1e] h-screen py-2 px-16 sticky top-0">
        <div className="pt-8 pb-16 text-4xl font-bold">Phillip</div>
        <div className="ml-[-0.5rem] flex flex-col ">
          <NavLink href="/">Home</NavLink>
          {/* <NavLink href="/about">About</NavLink> */}
          <NavLink href="/projects">Projects</NavLink>
          {/* <NavLink href="/contact">Contact</NavLink> */}
        </div>
        <div className="flex flex-col py-16 text-neutral-500">
          {/* <a
            className="py-2 transition-all hover:text-brick-red"
            href="#"
            target="_blank"
          >
            <Twitter />
          </a>
          <a
            className="py-2 transition-all hover:text-brick-red"
            href="#"
            target="_blank"
          >
            <Instagram />
          </a> */}
          <a
            className="py-2 transition-all hover:text-brick-red"
            href="https://www.linkedin.com/in/phillip-pargmann-3810811b4/"
            target="_blank"
            rel="noreferrer"
          >
            <Linkedin />
          </a>
          {/* <a
            className="py-2 transition-all hover:text-brick-red"
            href="#"
            target="_blank"
          >
            <Github />
          </a> */}
        </div>
        {/* {
          <div>
            <button
              className="p-2 transition-all bg-gray-100 border rounded-lg radius-2"
              onClick={() =>
                setTheme(resolvedTheme === "dark" ? "light" : "dark")
              }
            >
              {mounted && (
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 22 22"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  {resolvedTheme === "dark" ? (
                    <path
                      d="M11 14C11.8333 14 12.5417 13.7083 13.125 13.125C13.7083 12.5417 14 11.8333 14 11C14 10.1667 13.7083 9.45833 13.125 8.875C12.5417 8.29167 11.8333 8 11 8C10.1667 8 9.45833 8.29167 8.875 8.875C8.29167 9.45833 8 10.1667 8 11C8 11.8333 8.29167 12.5417 8.875 13.125C9.45833 13.7083 10.1667 14 11 14ZM11 16C9.61667 16 8.43767 15.5123 7.463 14.537C6.48767 13.5623 6 12.3833 6 11C6 9.61667 6.48767 8.43733 7.463 7.462C8.43767 6.48733 9.61667 6 11 6C12.3833 6 13.5627 6.48733 14.538 7.462C15.5127 8.43733 16 9.61667 16 11C16 12.3833 15.5127 13.5623 14.538 14.537C13.5627 15.5123 12.3833 16 11 16ZM1 12C0.716667 12 0.479333 11.904 0.288 11.712C0.096 11.5207 0 11.2833 0 11C0 10.7167 0.096 10.479 0.288 10.287C0.479333 10.0957 0.716667 10 1 10H3C3.28333 10 3.521 10.0957 3.713 10.287C3.90433 10.479 4 10.7167 4 11C4 11.2833 3.90433 11.5207 3.713 11.712C3.521 11.904 3.28333 12 3 12H1ZM19 12C18.7167 12 18.4793 11.904 18.288 11.712C18.096 11.5207 18 11.2833 18 11C18 10.7167 18.096 10.479 18.288 10.287C18.4793 10.0957 18.7167 10 19 10H21C21.2833 10 21.5207 10.0957 21.712 10.287C21.904 10.479 22 10.7167 22 11C22 11.2833 21.904 11.5207 21.712 11.712C21.5207 11.904 21.2833 12 21 12H19ZM11 4C10.7167 4 10.4793 3.904 10.288 3.712C10.096 3.52067 10 3.28333 10 3V1C10 0.716667 10.096 0.479 10.288 0.287C10.4793 0.0956666 10.7167 0 11 0C11.2833 0 11.521 0.0956666 11.713 0.287C11.9043 0.479 12 0.716667 12 1V3C12 3.28333 11.9043 3.52067 11.713 3.712C11.521 3.904 11.2833 4 11 4ZM11 22C10.7167 22 10.4793 21.904 10.288 21.712C10.096 21.5207 10 21.2833 10 21V19C10 18.7167 10.096 18.4793 10.288 18.288C10.4793 18.096 10.7167 18 11 18C11.2833 18 11.521 18.096 11.713 18.288C11.9043 18.4793 12 18.7167 12 19V21C12 21.2833 11.9043 21.5207 11.713 21.712C11.521 21.904 11.2833 22 11 22ZM4.65 6.05L3.575 5C3.375 4.81667 3.279 4.58333 3.287 4.3C3.29567 4.01667 3.39167 3.775 3.575 3.575C3.775 3.375 4.01667 3.275 4.3 3.275C4.58333 3.275 4.81667 3.375 5 3.575L6.05 4.65C6.23333 4.85 6.325 5.08333 6.325 5.35C6.325 5.61667 6.23333 5.85 6.05 6.05C5.86667 6.25 5.63767 6.34567 5.363 6.337C5.08767 6.329 4.85 6.23333 4.65 6.05V6.05ZM17 18.425L15.95 17.35C15.7667 17.15 15.675 16.9127 15.675 16.638C15.675 16.3627 15.7667 16.1333 15.95 15.95C16.1333 15.75 16.3627 15.6543 16.638 15.663C16.9127 15.671 17.15 15.7667 17.35 15.95L18.425 17C18.625 17.1833 18.721 17.4167 18.713 17.7C18.7043 17.9833 18.6083 18.225 18.425 18.425C18.225 18.625 17.9833 18.725 17.7 18.725C17.4167 18.725 17.1833 18.625 17 18.425ZM15.95 6.05C15.75 5.86667 15.6543 5.63733 15.663 5.362C15.671 5.08733 15.7667 4.85 15.95 4.65L17 3.575C17.1833 3.375 17.4167 3.279 17.7 3.287C17.9833 3.29567 18.225 3.39167 18.425 3.575C18.625 3.775 18.725 4.01667 18.725 4.3C18.725 4.58333 18.625 4.81667 18.425 5L17.35 6.05C17.15 6.23333 16.9167 6.325 16.65 6.325C16.3833 6.325 16.15 6.23333 15.95 6.05V6.05ZM3.575 18.425C3.375 18.225 3.275 17.9833 3.275 17.7C3.275 17.4167 3.375 17.1833 3.575 17L4.65 15.95C4.85 15.7667 5.08767 15.675 5.363 15.675C5.63767 15.675 5.86667 15.7667 6.05 15.95C6.25 16.1333 6.346 16.3627 6.338 16.638C6.32933 16.9127 6.23333 17.15 6.05 17.35L5 18.425C4.81667 18.625 4.58333 18.7207 4.3 18.712C4.01667 18.704 3.775 18.6083 3.575 18.425Z"
                      fill="#1e1e1e"
                    />
                  ) : (
                    <path
                      d="M9 18C6.48333 18 4.354 17.129 2.612 15.387C0.870667 13.6457 0 11.5167 0 9.00002C0 6.70002 0.75 4.70402 2.25 3.01202C3.75 1.32069 5.66667 0.333358 8 0.0500244C8.41667 2.44109e-05 8.74167 0.150024 8.975 0.500024C9.20833 0.850024 9.2 1.21669 8.95 1.60002C8.66667 2.03336 8.454 2.49169 8.312 2.97502C8.17067 3.45836 8.1 3.96669 8.1 4.50002C8.1 6.00002 8.625 7.27502 9.675 8.32502C10.725 9.37502 12 9.90002 13.5 9.90002C14.0167 9.90002 14.5293 9.82502 15.038 9.67502C15.546 9.52502 16 9.31669 16.4 9.05002C16.75 8.81669 17.1083 8.80402 17.475 9.01202C17.8417 9.22069 18 9.55002 17.95 10C17.7167 12.3 16.7377 14.2084 15.013 15.725C13.2877 17.2417 11.2833 18 9 18Z"
                      fill="#1e1e1e"
                    />
                  )}
                </svg>
              )}
            </button>
          </div>
        } */}
      </nav>
    </div>
  );
};

const Twitter = () => (
  <svg
    width="32"
    height="32"
    viewBox="0 0 32 32"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M29.9466 8.00016C28.9199 8.46683 27.8132 8.7735 26.6666 8.92016C27.8399 8.2135 28.7466 7.0935 29.1732 5.74683C28.0666 6.4135 26.8399 6.88016 25.5466 7.14683C24.4932 6.00016 23.0132 5.3335 21.3332 5.3335C18.1999 5.3335 15.6399 7.8935 15.6399 11.0535C15.6399 11.5068 15.6932 11.9468 15.7866 12.3602C11.0399 12.1202 6.81322 9.84016 3.99989 6.38683C3.50656 7.22683 3.22656 8.2135 3.22656 9.2535C3.22656 11.2402 4.22656 13.0002 5.77322 14.0002C4.82656 14.0002 3.94656 13.7335 3.17322 13.3335V13.3735C3.17322 16.1468 5.14656 18.4668 7.75989 18.9868C6.92086 19.2164 6.04002 19.2484 5.18656 19.0802C5.5487 20.2168 6.25794 21.2114 7.21458 21.9241C8.17122 22.6368 9.32715 23.0318 10.5199 23.0535C8.49806 24.6541 5.99188 25.5192 3.41322 25.5068C2.95989 25.5068 2.50656 25.4802 2.05322 25.4268C4.58656 27.0535 7.59989 28.0002 10.8266 28.0002C21.3332 28.0002 27.1066 19.2802 27.1066 11.7202C27.1066 11.4668 27.1066 11.2268 27.0932 10.9735C28.2132 10.1735 29.1732 9.16016 29.9466 8.00016V8.00016Z"
      fill="currentColor"
    />
  </svg>
);

const Instagram = () => (
  <svg
    width="28"
    height="28"
    viewBox="0 0 28 28"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M8.39984 0.666504H19.5998C23.8665 0.666504 27.3332 4.13317 27.3332 8.39984V19.5998C27.3332 21.6508 26.5184 23.6178 25.0681 25.0681C23.6178 26.5184 21.6508 27.3332 19.5998 27.3332H8.39984C4.13317 27.3332 0.666504 23.8665 0.666504 19.5998V8.39984C0.666504 6.34883 1.48126 4.38183 2.93154 2.93154C4.38183 1.48126 6.34883 0.666504 8.39984 0.666504ZM8.13317 3.33317C6.86013 3.33317 5.63923 3.83888 4.73906 4.73906C3.83888 5.63923 3.33317 6.86013 3.33317 8.13317V19.8665C3.33317 22.5198 5.47984 24.6665 8.13317 24.6665H19.8665C21.1395 24.6665 22.3604 24.1608 23.2606 23.2606C24.1608 22.3604 24.6665 21.1395 24.6665 19.8665V8.13317C24.6665 5.47984 22.5198 3.33317 19.8665 3.33317H8.13317ZM20.9998 5.33317C21.4419 5.33317 21.8658 5.50877 22.1783 5.82133C22.4909 6.13389 22.6665 6.55781 22.6665 6.99984C22.6665 7.44186 22.4909 7.86579 22.1783 8.17835C21.8658 8.49091 21.4419 8.6665 20.9998 8.6665C20.5578 8.6665 20.1339 8.49091 19.8213 8.17835C19.5088 7.86579 19.3332 7.44186 19.3332 6.99984C19.3332 6.55781 19.5088 6.13389 19.8213 5.82133C20.1339 5.50877 20.5578 5.33317 20.9998 5.33317ZM13.9998 7.33317C15.7679 7.33317 17.4636 8.03555 18.7139 9.28579C19.9641 10.536 20.6665 12.2317 20.6665 13.9998C20.6665 15.7679 19.9641 17.4636 18.7139 18.7139C17.4636 19.9641 15.7679 20.6665 13.9998 20.6665C12.2317 20.6665 10.536 19.9641 9.28579 18.7139C8.03555 17.4636 7.33317 15.7679 7.33317 13.9998C7.33317 12.2317 8.03555 10.536 9.28579 9.28579C10.536 8.03555 12.2317 7.33317 13.9998 7.33317ZM13.9998 9.99984C12.939 9.99984 11.9216 10.4213 11.1714 11.1714C10.4213 11.9216 9.99984 12.939 9.99984 13.9998C9.99984 15.0607 10.4213 16.0781 11.1714 16.8283C11.9216 17.5784 12.939 17.9998 13.9998 17.9998C15.0607 17.9998 16.0781 17.5784 16.8283 16.8283C17.5784 16.0781 17.9998 15.0607 17.9998 13.9998C17.9998 12.939 17.5784 11.9216 16.8283 11.1714C16.0781 10.4213 15.0607 9.99984 13.9998 9.99984Z"
      fill="currentColor"
    />
  </svg>
);
const Linkedin = () => (
  <svg
    width="27"
    height="25"
    viewBox="0 0 27 25"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M6.25326 3.66654C6.2529 4.37378 5.97161 5.05192 5.47126 5.55176C4.97092 6.05161 4.2925 6.33222 3.58526 6.33187C2.87801 6.33152 2.19987 6.05022 1.70003 5.54988C1.20018 5.04953 0.919569 4.37111 0.919922 3.66387C0.920276 2.95662 1.20157 2.27849 1.70191 1.77864C2.20226 1.27879 2.88068 0.998182 3.58792 0.998535C4.29517 0.998889 4.9733 1.28018 5.47315 1.78053C5.973 2.28087 6.25361 2.95929 6.25326 3.66654ZM6.33326 8.30654H0.999922V24.9999H6.33326V8.30654ZM14.7599 8.30654H9.45326V24.9999H14.7066V16.2399C14.7066 11.3599 21.0666 10.9065 21.0666 16.2399V24.9999H26.3333V14.4265C26.3333 6.19987 16.9199 6.50654 14.7066 10.5465L14.7599 8.30654Z"
      fill="currentColor"
    />
  </svg>
);
const Github = () => (
  <svg
    width="25"
    height="27"
    viewBox="0 0 25 27"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M4.84414 21.8709C4.44414 21.6042 4.10014 21.2642 3.69747 20.7829C3.48846 20.5271 3.28134 20.2697 3.07614 20.0109C2.4588 19.2442 2.06947 18.8909 1.6668 18.7455C1.33387 18.626 1.06205 18.3791 0.911145 18.0592C0.760241 17.7392 0.742612 17.3725 0.862136 17.0395C0.98166 16.7066 1.22855 16.4348 1.54848 16.2839C1.86842 16.133 2.2352 16.1153 2.56814 16.2349C3.5708 16.5949 4.24947 17.2149 5.16414 18.3522C5.0388 18.1962 5.61747 18.9215 5.74147 19.0709C5.9948 19.3735 6.18147 19.5575 6.32814 19.6549C6.60014 19.8375 7.1108 19.9162 7.86147 19.8415C7.89214 19.3322 7.9868 18.8375 8.1308 18.3815C4.17347 17.4135 1.93347 14.8615 1.93347 9.85353C1.93347 8.20019 2.4268 6.71219 3.34414 5.46419C3.05347 4.27219 3.09747 2.83086 3.7468 1.20819C3.82049 1.02464 3.9341 0.859781 4.07938 0.725565C4.22467 0.591349 4.398 0.491137 4.5868 0.432193C4.6948 0.400193 4.75614 0.385527 4.86414 0.369527C5.9348 0.205527 7.4468 0.596193 9.41747 1.83086C10.5919 1.5563 11.7941 1.4185 13.0001 1.42019C14.2161 1.42019 15.4241 1.55886 16.5788 1.83086C18.5481 0.58686 20.0628 0.196194 21.1415 0.369527C21.2548 0.38686 21.3508 0.409527 21.4321 0.436193C21.6172 0.497229 21.7867 0.598105 21.9286 0.731717C22.0705 0.865329 22.1814 1.02843 22.2535 1.20953C22.9028 2.83086 22.9468 4.27219 22.6561 5.46286C23.5775 6.71086 24.0668 8.18953 24.0668 9.85353C24.0668 14.8629 21.8348 17.4069 17.8775 18.3762C18.0441 18.9295 18.1308 19.5482 18.1308 20.2162C18.1309 21.4233 18.1256 22.6304 18.1148 23.8375C18.4142 23.9028 18.682 24.0693 18.8731 24.3089C19.0642 24.5486 19.1669 24.8467 19.1639 25.1532C19.1609 25.4596 19.0525 25.7557 18.8568 25.9916C18.6611 26.2274 18.3901 26.3887 18.0895 26.4482C16.5708 26.7522 15.4455 25.7389 15.4455 24.4149L15.4481 23.8202L15.4548 22.8802C15.4615 21.9362 15.4641 21.0962 15.4641 20.2162C15.4641 19.2869 15.2201 18.6802 14.8975 18.4029C14.0161 17.6429 14.4628 16.1962 15.6175 16.0669C19.5735 15.6229 21.4001 14.0909 21.4001 9.85353C21.4001 8.58019 20.9841 7.52819 20.1828 6.64819C20.014 6.46319 19.9007 6.23436 19.8559 5.98794C19.8111 5.74152 19.8366 5.48746 19.9295 5.25486C20.1508 4.70286 20.2455 3.97886 20.0575 3.10286L20.0441 3.10686C19.3895 3.29219 18.5641 3.69353 17.5668 4.37219C17.406 4.48133 17.2232 4.554 17.0314 4.58509C16.8395 4.61618 16.6432 4.60495 16.4561 4.55219C15.3307 4.24058 14.1679 4.08402 13.0001 4.08686C11.8135 4.08686 10.6375 4.24553 9.54414 4.55353C9.35776 4.60587 9.16222 4.617 8.97111 4.58615C8.78 4.55529 8.5979 4.48319 8.43747 4.37486C7.4348 3.69886 6.60547 3.29886 5.9468 3.11219C5.7548 3.98286 5.84947 4.70419 6.06947 5.25486C6.16255 5.48734 6.18827 5.74132 6.14371 5.98774C6.09914 6.23416 5.98608 6.46305 5.81747 6.64819C5.02147 7.52019 4.60014 8.59219 4.60014 9.85353C4.60014 14.0829 6.42814 15.6242 10.3628 16.0669C11.5161 16.1962 11.9641 17.6362 11.0881 18.3975C10.8321 18.6215 10.5161 19.3735 10.5161 20.2162V24.4162C10.5161 25.7309 9.4028 26.7162 7.9028 26.4535C7.59849 26.4001 7.32218 26.2426 7.12109 26.0081C6.92 25.7735 6.80662 25.4764 6.80032 25.1675C6.79403 24.8586 6.8952 24.5571 7.08656 24.3145C7.27792 24.0719 7.54759 23.9033 7.84947 23.8375V22.5175C6.63614 22.5989 5.63347 22.4002 4.84414 21.8709Z"
      fill="currentColor"
    />
  </svg>
);

export default Navbar;
